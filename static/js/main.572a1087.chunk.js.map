{"version":3,"sources":["components/main-menu.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","menu","MenuDivider","Divider","MainMenu","state","current","handleClick","e","console","log","_this","setState","key","react_default","a","createElement","onClick","this","selectedKeys","mode","theme","Item","icon","type","title","Component","dataSource","Object","toConsumableArray","Array","map","i","index","name","faker","findName","avatar","image","amount","concat","Math","random","toFixed","date","future","status","columns","dataIndex","render","props","src","style","marginRight","sorter","b","toLocaleDateString","dropdown","overlay","es_button","transform","href","rowSelection","columnWidth","App","collapsed","onCollapse","prevState","radioStyle","display","height","lineHeight","layout","Sider","breakpoint","width","textAlign","main_menu_MainMenu","Content","padding","breadcrumb","marginBottom","row","gutter","col","span","float","Group","es_switch","defaultChecked","size","card","es_select","defaultValue","dropdownMatchSelectWidth","Option","value","placeholder","showArrow","user","id","table","pagination","scroll","y","background","es_radio","date_picker","format","block","React","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.572a1087.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuDivider = Menu.Divider;\n\nexport default class MainMenu extends Component {\n  state = {\n    current: 'contributions',\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode=\"inline\"\n        theme=\"light\"\n      >\n        <Menu.Item key=\"dashboard\">\n          <Icon type=\"dashboard\" />\n          <span>Dashboard</span>\n        </Menu.Item>\n        <SubMenu key=\"requests\" title={<span><Icon type=\"inbox\" /><span>Requests</span></span>}>\n          <Menu.Item key=\"requests-1\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #1</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-2\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #2</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-3\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #3</span>\n          </Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"calendar\">\n          <Icon type=\"calendar\" />\n          <span>Calendar</span>\n        </Menu.Item>\n        <Menu.Item key=\"balance\">\n          <Icon type=\"fund\" />\n          <span>Balance</span>\n        </Menu.Item>\n        <Menu.Item key=\"settings\">\n          <Icon type=\"setting\" />\n          <span>Settings</span>\n        </Menu.Item>\n        <Menu.Item key=\"reports\">\n          <Icon type=\"bar-chart\" />\n          <span>Reports</span>\n        </Menu.Item>\n        <MenuDivider />\n        <Menu.Item key=\"support\">\n          <Icon type=\"setting\" />\n          <span>Support</span>\n        </Menu.Item>\n        <Menu.Item key=\"setup-guide\">\n          <Icon type=\"rocket\" />\n          <span>Setup Guide</span>\n        </Menu.Item>\n        <Menu.Item key=\"preferences\">\n          <Icon type=\"sliders\" />\n          <span>Preferences</span>\n        </Menu.Item>\n        <Menu.Item key=\"field-options\">\n          <Icon type=\"edit\" />\n          <span>Field Options</span>\n        </Menu.Item>\n        <Menu.Item key=\"rss\">\n          <Icon type=\"database\" />\n          <span>RSS Feeds</span>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import faker from 'faker';\nimport React from 'react';\nimport {\n  Avatar,\n  Breadcrumb,\n  Button,\n  Card,\n  Col,\n  DatePicker,\n  Dropdown,\n  Icon,\n  Layout,\n  Menu,\n  Radio,\n  Row,\n  Select,\n  Switch,\n  Table,\n} from 'antd';\n\nimport MainMenu from './components/main-menu';\n\nimport './App.css';\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\">1st action</Menu.Item>\n    <Menu.Item key=\"2\">2nd action</Menu.Item>\n    <Menu.Item key=\"3\">3rd action</Menu.Item>\n    <Menu.Item key=\"4\">4th action</Menu.Item>\n  </Menu>\n);\n\nconst dataSource = [...Array(30)].map((i, index) => ({\n  key: index,\n  name: faker.name.findName(),\n  avatar: faker.image.avatar(),\n  type: 'TOIL (in days)',\n  amount: `+${Math.random().toFixed(1)}`,\n  date: faker.date.future(),\n  status: '+info req.'\n}));\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (name, props) => (\n      <div><Avatar src={props.avatar} style={{ marginRight: 17 }} /> {name}</div>\n    ),\n    sorter: (a, b) => {\n      if (a.name < b.name) { return -1; }\n      if (a.name > b.name) { return 1; }\n      return 0;\n    }\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    render: (date, props) => (\n      <div>{props.amount} {date.toLocaleDateString()}</div>\n    ),\n    sorter: (a, b) => b.date - a.date\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n  },\n  {\n    key: 'actions',\n    render: () => (\n      <Dropdown overlay={menu}>\n        <Button>\n          Actions <Icon type=\"ellipsis\" style={{ transform: 'rotate(90deg)' }} />\n        </Button>\n      </Dropdown>\n\n    )\n  },\n  {\n    key: 'view',\n    render: () => (\n      <a href=\"/\">View <Icon type=\"right\" /></a>\n    )\n  }\n];\n\nconst rowSelection = {\n  columnWidth: 10\n}\n\nexport default class App extends React.Component {\n  state = {\n    collapsed: false\n  }\n\n  onCollapse = () => {\n    this.setState(prevState => ({\n      collapsed: !prevState.collapsed\n    }))\n  }\n\n  render() {\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n\n    return (\n      <Layout>\n        <Layout.Sider\n          breakpoint=\"md\"\n          width={240}\n          theme=\"light\">\n          <div style={{ textAlign: 'center' }}>\n            <h1>\n              <Icon type=\"calendar\" /><br />Leave\n            </h1>\n          </div>\n          <MainMenu />\n        </Layout.Sider>\n        <Layout.Content style={{ padding: '25px 36px' }}>\n          <Breadcrumb style={{ marginBottom: 35 }}>\n             <Breadcrumb.Item>CiviCloud</Breadcrumb.Item>\n            <Breadcrumb.Item>Leave</Breadcrumb.Item>\n            <Breadcrumb.Item>Leave Requests</Breadcrumb.Item>\n          </Breadcrumb>\n          <div>\n            <Row gutter={8} style={{ marginBottom: 29 }}>\n              <Col span={12}>\n                <h2 style={{ marginBottom: 0 }}><Icon type=\"calendar\" />Leave Requests</h2>\n              </Col>\n              <Col span={12}>\n                <div style={{ float: 'right' }}>\n                  <span style={{ marginRight: 11}}>Record</span>\n                  <Button.Group style={{ marginRight: 11}}>\n                    <Button>Absence <Icon type=\"user\" /></Button>\n                    <Button>Overtime <Icon type=\"clock-circle\" /></Button>\n                  </Button.Group>\n                  <Button>Show Filters<Switch defaultChecked size=\"small\" /></Button>\n                </div>\n              </Col>\n            </Row>\n            <Row gutter={8}>\n              <Col span={18}>\n                <Card>\n                  <Row style={{ marginBottom: 20 }}>\n                    <Col span={12}>\n                      <Select defaultValue={0} dropdownMatchSelectWidth={false} style={{ width: 200 }}>\n                        <Select.Option value={0}>Actions</Select.Option>\n                        <Select.Option value={2}>Bulk Action #1</Select.Option>\n                        <Select.Option value={3}>Bulk Action #2</Select.Option>\n                        <Select.Option value={4}>Bulk Action #3</Select.Option>\n                      </Select>\n                    </Col>\n                    <Col span={12}>\n                      <div style={{ float: 'right' }}>\n                        <Select\n                          defaultValue=\"contacts\">\n                          <Select.Option value=\"contacts\">Contacts</Select.Option>\n                          <Select.Option value=\"organizations\">Organizations</Select.Option>\n                        </Select>\n                        <Select\n                          style={{ width: 250 }}\n                          placeholder=\"Search / Filter\"\n                          showArrow={false}>\n                          {dataSource.map(user => (\n                            <Select.Option key={user.key} value={user.id}>{user.name}</Select.Option>\n                          ))}\n                        </Select>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Table\n                    rowSelection={rowSelection}\n                    dataSource={dataSource}\n                    columns={columns}\n                    pagination={false}\n                    scroll={{ y: 800 }}\n                    size=\"small\" />\n                </Card>\n              </Col>\n              <Col span={6}>\n                <Card style={{ background: '#e6e6e6' }}>\n                  <Card style={{ marginBottom: 10 }}>\n                    <Radio.Group value={2}>\n                      <Radio style={radioStyle} value={1}>Assigned to me</Radio>\n                      <Radio style={radioStyle} value={2}>Unassigned</Radio>\n                      <Radio style={radioStyle} value={3}>View all</Radio>\n                    </Radio.Group>\n                  </Card>\n                  <Select defaultValue={2} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Period 2017</Select.Option>\n                    <Select.Option value={2}>Period 2018</Select.Option>\n                    <Select.Option value={3}>Period 2019</Select.Option>\n                    <Select.Option value={4}>Period 2020</Select.Option>\n                  </Select>\n                  <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Department</Select.Option>\n                    <Select.Option value={2}>IT</Select.Option>\n                    <Select.Option value={3}>HR</Select.Option>\n                    <Select.Option value={4}>Accounting</Select.Option>\n                  </Select>\n                  <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Region</Select.Option>\n                    <Select.Option value={2}>Europe</Select.Option>\n                    <Select.Option value={3}>Africa</Select.Option>\n                    <Select.Option value={4}>USA</Select.Option>\n                  </Select>\n                  <DatePicker placeholder=\"Start Date\" format=\"DD/MM/YYYY\" style={{ width: '100%', marginBottom: 10 }} />\n                  <Button type=\"primary\" size=\"large\" block>\n                    Apply Filters\n                    <Icon type=\"sync\" />\n                  </Button>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}