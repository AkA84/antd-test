{"version":3,"sources":["components/main-menu.js","components/top-form.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","menu","MenuDivider","Divider","MainMenu","state","current","open","handleClick","e","console","log","_this","setState","key","react_default","a","createElement","onClick","this","selectedKeys","defaultOpenKeys","mode","theme","Item","icon","type","title","Component","TopForm","getFieldDecorator","props","form","es_form","layout","es_button","Group","label","initialValue","valuePropName","es_switch","onChange","cb","size","React","top_form","create","dataSource","Object","toConsumableArray","Array","map","i","index","name","faker","findName","avatar","image","amount","concat","Math","random","toFixed","date","future","status","columns","dataIndex","render","src","style","marginRight","class","sorter","b","toLocaleDateString","dropdown","overlay","transform","href","rowSelection","columnWidth","App","collapsed","showFilters","onCollapse","prevState","onShowFilterToggle","value","radioStyle","display","height","lineHeight","Sider","breakpoint","width","textAlign","main_menu_MainMenu","Content","padding","breadcrumb","marginBottom","row","gutter","col","span","float","bind","card","bodyStyle","paddingBottom","es_select","defaultValue","dropdownMatchSelectWidth","Option","placeholder","showArrow","user","id","table","marginLeft","pagination","scroll","y","background","es_radio","date_picker","format","block","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2dAGMA,EAAUC,EAAA,EAAKD,QACfE,EAAcD,EAAA,EAAKE,QAEJC,6MACnBC,MAAQ,CACNC,QAAS,aACTC,KAAM,cAGRC,YAAc,SAACC,GACbC,QAAQC,IAAI,SAAUF,GACtBG,EAAKC,SAAS,CACZP,QAASG,EAAEK,+EAKb,OACEC,EAAAC,EAAAC,cAAAhB,EAAA,GACEiB,QAASC,KAAKX,YACdY,aAAc,CAACD,KAAKd,MAAMC,SAC1Be,gBAAiB,CAACF,KAAKd,MAAME,MAC7Be,KAAK,SACLC,MAAM,SAENR,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,aACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,cACXX,EAAAC,EAAAC,cAAA,0BAEFF,EAAAC,EAAAC,cAACjB,EAAD,CAASc,IAAI,WAAWa,MAAOZ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,UAAUX,EAAAC,EAAAC,cAAA,0BACxDF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,cACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,oBACXX,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,cACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,oBACXX,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,cACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,oBACXX,EAAAC,EAAAC,cAAA,yBAGJF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,YACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,aACXX,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,WACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,SACXX,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,YACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,YACXX,EAAAC,EAAAC,cAAA,yBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,WACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,cACXX,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAACf,EAAD,MACAa,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,WACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,YACXX,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,eACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,WACXX,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,eACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,YACXX,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,iBACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,SACXX,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,OACbC,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,aACXX,EAAAC,EAAAC,cAAA,kCA3E4BW,kDCHhCC,mLACM,IACAC,EAAsBX,KAAKY,MAAMC,KAAjCF,kBAER,OAAQf,EAAAC,EAAAC,cAAAgB,EAAA,GAAMC,OAAO,UACnBnB,EAAAC,EAAAC,cAAAgB,EAAA,EAAMT,KAAN,KACET,EAAAC,EAAAC,cAAA,uBAEFF,EAAAC,EAAAC,cAAAgB,EAAA,EAAMT,KAAN,KACET,EAAAC,EAAAC,cAAAkB,EAAA,EAAQC,MAAR,KACErB,EAAAC,EAAAC,cAAAkB,EAAA,kBAAgBpB,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,UAC3BX,EAAAC,EAAAC,cAAAkB,EAAA,mBAAiBpB,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,oBAGhCX,EAAAC,EAAAC,cAAAgB,EAAA,EAAMT,KAAN,CAAWa,MAAM,gBACdP,EAAkB,SAAU,CAAEQ,cAAc,EAAMC,cAAe,WAAjET,CACCf,EAAAC,EAAAC,cAAAuB,EAAA,GAAQC,SAAUtB,KAAKY,MAAMW,GAAIC,KAAK,oBAhB1BC,IAAMhB,WAuBbiB,EAAAZ,EAAA,EAAKa,QAAL,CAAcjB,GCFvB5B,WACJc,EAAAC,EAAAC,cAAAhB,EAAA,OACEc,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,KAAf,cACAC,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,KAAf,cACAC,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,KAAf,cACAC,EAAAC,EAAAC,cAAAhB,EAAA,EAAMuB,KAAN,CAAWV,IAAI,KAAf,gBAIEiC,EAAaC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,KAAKC,IAAI,SAACC,EAAGC,GAAJ,MAAe,CACnDvC,IAAKuC,EACLC,KAAMC,IAAMD,KAAKE,WACjBC,OAAQF,IAAMG,MAAMD,SACpB/B,KAAM,iBACNiC,OAAM,IAAAC,OAAMC,KAAKC,SAASC,QAAQ,IAClCC,KAAMT,IAAMS,KAAKC,SACjBC,OAAQ,gBAGJC,EAAU,CACd,CACExC,MAAO,OACPyC,UAAW,OACXtD,IAAK,OACLuD,OAAQ,SAACf,EAAMvB,GAAP,OACNhB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAAwC,EAAA,GAAQa,IAAKvC,EAAM0B,OAAQc,MAAO,CAAEC,YAAa,MAAtD,IAA8DzD,EAAAC,EAAAC,cAAA,QAAMwD,MAAM,iBAAiBnB,KAE7FoB,OAAQ,SAAC1D,EAAG2D,GACV,OAAI3D,EAAEsC,KAAOqB,EAAErB,MAAgB,EAC3BtC,EAAEsC,KAAOqB,EAAErB,KAAe,EACvB,IAGX,CACE3B,MAAO,OACPyC,UAAW,OACXtD,IAAK,QAEP,CACEa,MAAO,OACPyC,UAAW,OACXtD,IAAK,OACLuD,OAAQ,SAACL,EAAMjC,GAAP,OACNhB,EAAAC,EAAAC,cAAA,WAAMc,EAAM4B,OAAZ,IAAqBK,EAAKY,uBAE5BF,OAAQ,SAAC1D,EAAG2D,GAAJ,OAAUA,EAAEX,KAAOhD,EAAEgD,OAE/B,CACErC,MAAO,SACPyC,UAAW,SACXtD,IAAK,UAEP,CACEA,IAAK,UACLuD,OAAQ,kBACNtD,EAAAC,EAAAC,cAAA4D,EAAA,GAAUC,QAAS7E,GACjBc,EAAAC,EAAAC,cAAAkB,EAAA,kBACUpB,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,WAAW6C,MAAO,CAAEQ,UAAW,uBAK1D,CACEjE,IAAK,OACLuD,OAAQ,kBACNtD,EAAAC,EAAAC,cAAA,KAAG+D,KAAK,KAAR,QAAiBjE,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,cAK5BuD,EAAe,CACnBC,YAAa,IAGMC,6MACnB9E,MAAQ,CACN+E,WAAW,EACXC,aAAa,KAGfC,WAAa,WACX1E,EAAKC,SAAS,SAAA0E,GAAS,MAAK,CAC1BH,WAAYG,EAAUH,gBAI1BI,mBAAqB,SAAAC,GACnB7E,EAAKC,SAAS,SAAA0E,GAAS,MAAK,CAC1BF,aAAcE,EAAUF,wFAK1B,IAAMK,EAAa,CACjBC,QAAS,QACTC,OAAQ,OACRC,WAAY,QAGd,OACE9E,EAAAC,EAAAC,cAAAiB,EAAA,OACEnB,EAAAC,EAAAC,cAAAiB,EAAA,EAAQ4D,MAAR,CACEC,WAAW,KACXC,MAAO,IACPzE,MAAM,SACNR,EAAAC,EAAAC,cAAA,OAAKsD,MAAO,CAAE0B,UAAW,WACvBlF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,aAAaX,EAAAC,EAAAC,cAAA,WAD1B,UAIFF,EAAAC,EAAAC,cAACiF,EAAD,OAEFnF,EAAAC,EAAAC,cAAAiB,EAAA,EAAQiE,QAAR,CAAgB5B,MAAO,CAAE6B,QAAS,cAChCrF,EAAAC,EAAAC,cAAAoF,EAAA,GAAY9B,MAAO,CAAE+B,aAAc,KAChCvF,EAAAC,EAAAC,cAAAoF,EAAA,EAAY7E,KAAZ,kBACDT,EAAAC,EAAAC,cAAAoF,EAAA,EAAY7E,KAAZ,cACAT,EAAAC,EAAAC,cAAAoF,EAAA,EAAY7E,KAAZ,wBAEFT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAAsF,EAAA,GAAKC,OAAQ,EAAGjC,MAAO,CAAE+B,aAAc,KACrCvF,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAM,IACT3F,EAAAC,EAAAC,cAAA,MAAIsD,MAAO,CAAE+B,aAAc,IAAKvF,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,aAA3C,mBAEFX,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAM,IACT3F,EAAAC,EAAAC,cAAA,OAAKsD,MAAO,CAAEoC,MAAO,UACnB5F,EAAAC,EAAAC,cAAC4B,EAAD,CAASH,GAAIvB,KAAKqE,mBAAmBoB,KAAKzF,WAIhDJ,EAAAC,EAAAC,cAAAsF,EAAA,GAAKC,OAAQ,GACXzF,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAMvF,KAAKd,MAAMgF,YAAc,GAAK,IACvCtE,EAAAC,EAAAC,cAAA4F,EAAA,GAAMC,UAAW,CAAEC,cAAe,IAChChG,EAAAC,EAAAC,cAAAsF,EAAA,GAAKhC,MAAO,CAAE+B,aAAc,KAC1BvF,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAM,IACT3F,EAAAC,EAAAC,cAAA+F,EAAA,GAAQC,aAAc,EAAGC,0BAA0B,EAAO3C,MAAO,CAAEyB,MAAO,MACxEjF,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,WACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,kBACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,kBACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,oBAGJ1E,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAM,IACT3F,EAAAC,EAAAC,cAAA,OAAKsD,MAAO,CAAEoC,MAAO,UACnB5F,EAAAC,EAAAC,cAAA+F,EAAA,GACEC,aAAa,YACblG,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAM,YAArB,YACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAM,iBAArB,kBAEF1E,EAAAC,EAAAC,cAAA+F,EAAA,GACEzC,MAAO,CAAEyB,MAAO,KAChBoB,YAAY,kBACZC,WAAW,GACVtE,EAAWI,IAAI,SAAAmE,GAAI,OAClBvG,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAerG,IAAKwG,EAAKxG,IAAK2E,MAAO6B,EAAKC,IAAKD,EAAKhE,YAM9DvC,EAAAC,EAAAC,cAAAuG,EAAA,GACEjD,MAAO,CAAEkD,YAAa,GAAIjD,aAAc,IACxCS,aAAcA,EACdlC,WAAYA,EACZoB,QAASA,EACTuD,YAAY,EACZC,OAAQ,CAAEC,EAAG,KACbjF,KAAK,YAGX5B,EAAAC,EAAAC,cAAAwF,EAAA,GAAKC,KAAMvF,KAAKd,MAAMgF,YAAc,EAAI,GACtCtE,EAAAC,EAAAC,cAAA4F,EAAA,GAAMtC,MAAO,CAAEsD,WAAY,YACzB9G,EAAAC,EAAAC,cAAA4F,EAAA,GAAMtC,MAAO,CAAE+B,aAAc,KAC3BvF,EAAAC,EAAAC,cAAA6G,EAAA,EAAO1F,MAAP,CAAaqD,MAAO,GAClB1E,EAAAC,EAAAC,cAAA6G,EAAA,GAAOvD,MAAOmB,EAAYD,MAAO,GAAjC,kBACA1E,EAAAC,EAAAC,cAAA6G,EAAA,GAAOvD,MAAOmB,EAAYD,MAAO,GAAjC,cACA1E,EAAAC,EAAAC,cAAA6G,EAAA,GAAOvD,MAAOmB,EAAYD,MAAO,GAAjC,cAGJ1E,EAAAC,EAAAC,cAAA+F,EAAA,GAAQC,aAAc,EAAG1C,MAAO,CAAEyB,MAAO,OAAQM,aAAc,KAC7DvF,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,eACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,eACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,eACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,gBAEF1E,EAAAC,EAAAC,cAAA+F,EAAA,GAAQC,aAAc,EAAG1C,MAAO,CAAEyB,MAAO,OAAQM,aAAc,KAC7DvF,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,cACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,MACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,MACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,eAEF1E,EAAAC,EAAAC,cAAA+F,EAAA,GAAQC,aAAc,EAAG1C,MAAO,CAAEyB,MAAO,OAAQM,aAAc,KAC7DvF,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,UACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,UACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,UACA1E,EAAAC,EAAAC,cAAA+F,EAAA,EAAQG,OAAR,CAAe1B,MAAO,GAAtB,QAEF1E,EAAAC,EAAAC,cAAA8G,EAAA,GAAYX,YAAY,aAAaY,OAAO,aAAazD,MAAO,CAAEyB,MAAO,OAAQM,aAAc,MAC/FvF,EAAAC,EAAAC,cAAAkB,EAAA,GAAQT,KAAK,UAAUiB,KAAK,QAAQsF,OAAK,GAAzC,gBAEElH,EAAAC,EAAAC,cAAAQ,EAAA,GAAMC,KAAK,uBA7HEkB,IAAMhB,WCtFnBsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlE,OAAOtD,EAAAC,EAAAC,cAACuH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1827077d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuDivider = Menu.Divider;\n\nexport default class MainMenu extends Component {\n  state = {\n    current: 'requests-1',\n    open: 'requests'\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        defaultOpenKeys={[this.state.open]}\n        mode=\"inline\"\n        theme=\"light\"\n      >\n        <Menu.Item key=\"dashboard\">\n          <Icon type=\"dashboard\" />\n          <span>Dashboard</span>\n        </Menu.Item>\n        <SubMenu key=\"requests\" title={<span><Icon type=\"inbox\" /><span>Requests</span></span>}>\n          <Menu.Item key=\"requests-1\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #1</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-2\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #2</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-3\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #3</span>\n          </Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"calendar\">\n          <Icon type=\"calendar\" />\n          <span>Calendar</span>\n        </Menu.Item>\n        <Menu.Item key=\"balance\">\n          <Icon type=\"fund\" />\n          <span>Balance</span>\n        </Menu.Item>\n        <Menu.Item key=\"settings\">\n          <Icon type=\"setting\" />\n          <span>Settings</span>\n        </Menu.Item>\n        <Menu.Item key=\"reports\">\n          <Icon type=\"bar-chart\" />\n          <span>Reports</span>\n        </Menu.Item>\n        <MenuDivider />\n        <Menu.Item key=\"support\">\n          <Icon type=\"setting\" />\n          <span>Support</span>\n        </Menu.Item>\n        <Menu.Item key=\"setup-guide\">\n          <Icon type=\"rocket\" />\n          <span>Setup Guide</span>\n        </Menu.Item>\n        <Menu.Item key=\"preferences\">\n          <Icon type=\"sliders\" />\n          <span>Preferences</span>\n        </Menu.Item>\n        <Menu.Item key=\"field-options\">\n          <Icon type=\"edit\" />\n          <span>Field Options</span>\n        </Menu.Item>\n        <Menu.Item key=\"rss\">\n          <Icon type=\"database\" />\n          <span>RSS Feeds</span>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import React from 'react'\nimport { Button, Form, Icon, Switch } from 'antd'\n\nclass TopForm extends React.Component {\n  render () {\n    const { getFieldDecorator } = this.props.form;\n\n    return (<Form layout=\"inline\">\n      <Form.Item>\n        <span>Record</span>\n      </Form.Item>\n      <Form.Item>\n        <Button.Group>\n          <Button>Absence <Icon type=\"user\" /></Button>\n          <Button>Overtime <Icon type=\"clock-circle\" /></Button>\n        </Button.Group>\n      </Form.Item>\n      <Form.Item label=\"Show Filters\">\n        {getFieldDecorator('switch', { initialValue: true, valuePropName: 'checked' })(\n          <Switch onChange={this.props.cb} size=\"small\" />\n        )}\n      </Form.Item>\n    </Form>)\n  }\n}\n\nexport default Form.create()(TopForm);\n","import faker from 'faker';\nimport React from 'react';\nimport {\n  Avatar,\n  Breadcrumb,\n  Button,\n  Card,\n  Col,\n  DatePicker,\n  Dropdown,\n  Icon,\n  Layout,\n  Menu,\n  Radio,\n  Row,\n  Select,\n  Table,\n} from 'antd';\n\nimport MainMenu from './components/main-menu';\nimport TopForm from './components/top-form';\n\nimport './App.css';\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\">1st action</Menu.Item>\n    <Menu.Item key=\"2\">2nd action</Menu.Item>\n    <Menu.Item key=\"3\">3rd action</Menu.Item>\n    <Menu.Item key=\"4\">4th action</Menu.Item>\n  </Menu>\n);\n\nconst dataSource = [...Array(30)].map((i, index) => ({\n  key: index,\n  name: faker.name.findName(),\n  avatar: faker.image.avatar(),\n  type: 'TOIL (in days)',\n  amount: `+${Math.random().toFixed(1)}`,\n  date: faker.date.future(),\n  status: '+info req.'\n}));\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (name, props) => (\n      <div><Avatar src={props.avatar} style={{ marginRight: 17 }}/> <span class=\"truncate-name\">{name}</span></div>\n    ),\n    sorter: (a, b) => {\n      if (a.name < b.name) { return -1; }\n      if (a.name > b.name) { return 1; }\n      return 0;\n    }\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    render: (date, props) => (\n      <div>{props.amount} {date.toLocaleDateString()}</div>\n    ),\n    sorter: (a, b) => b.date - a.date\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n  },\n  {\n    key: 'actions',\n    render: () => (\n      <Dropdown overlay={menu}>\n        <Button>\n          Actions <Icon type=\"ellipsis\" style={{ transform: 'rotate(90deg)' }} />\n        </Button>\n      </Dropdown>\n    )\n  },\n  {\n    key: 'view',\n    render: () => (\n      <a href=\"/\">View <Icon type=\"right\" /></a>\n    )\n  }\n];\n\nconst rowSelection = {\n  columnWidth: 10\n}\n\nexport default class App extends React.Component {\n  state = {\n    collapsed: false,\n    showFilters: true\n  }\n\n  onCollapse = () => {\n    this.setState(prevState => ({\n      collapsed: !prevState.collapsed\n    }))\n  }\n\n  onShowFilterToggle = value => {\n    this.setState(prevState => ({\n      showFilters: !prevState.showFilters\n    }))\n  }\n\n  render() {\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n\n    return (\n      <Layout>\n        <Layout.Sider\n          breakpoint=\"md\"\n          width={240}\n          theme=\"light\">\n          <div style={{ textAlign: 'center' }}>\n            <h1>\n              <Icon type=\"calendar\" /><br />Leave\n            </h1>\n          </div>\n          <MainMenu />\n        </Layout.Sider>\n        <Layout.Content style={{ padding: '25px 36px' }}>\n          <Breadcrumb style={{ marginBottom: 35 }}>\n             <Breadcrumb.Item>CiviCloud</Breadcrumb.Item>\n            <Breadcrumb.Item>Leave</Breadcrumb.Item>\n            <Breadcrumb.Item>Leave Requests</Breadcrumb.Item>\n          </Breadcrumb>\n          <div>\n            <Row gutter={8} style={{ marginBottom: 29 }}>\n              <Col span={12}>\n                <h2 style={{ marginBottom: 0 }}><Icon type=\"calendar\" />Leave Requests</h2>\n              </Col>\n              <Col span={12}>\n                <div style={{ float: 'right' }}>\n                  <TopForm cb={this.onShowFilterToggle.bind(this)} />\n                </div>\n              </Col>\n            </Row>\n            <Row gutter={8}>\n              <Col span={this.state.showFilters ? 18 : 24}>\n                <Card bodyStyle={{ paddingBottom: 0 }}>\n                  <Row style={{ marginBottom: 20 }}>\n                    <Col span={12}>\n                      <Select defaultValue={0} dropdownMatchSelectWidth={false} style={{ width: 200 }}>\n                        <Select.Option value={0}>Actions</Select.Option>\n                        <Select.Option value={2}>Bulk Action #1</Select.Option>\n                        <Select.Option value={3}>Bulk Action #2</Select.Option>\n                        <Select.Option value={4}>Bulk Action #3</Select.Option>\n                      </Select>\n                    </Col>\n                    <Col span={12}>\n                      <div style={{ float: 'right' }}>\n                        <Select\n                          defaultValue=\"contacts\">\n                          <Select.Option value=\"contacts\">Contacts</Select.Option>\n                          <Select.Option value=\"organizations\">Organizations</Select.Option>\n                        </Select>\n                        <Select\n                          style={{ width: 230 }}\n                          placeholder=\"Search / Filter\"\n                          showArrow={false}>\n                          {dataSource.map(user => (\n                            <Select.Option key={user.key} value={user.id}>{user.name}</Select.Option>\n                          ))}\n                        </Select>\n                      </div>\n                    </Col>\n                  </Row>\n                  <Table\n                    style={{ marginLeft: -24, marginRight: -24 }}\n                    rowSelection={rowSelection}\n                    dataSource={dataSource}\n                    columns={columns}\n                    pagination={false}\n                    scroll={{ y: 800 }}\n                    size=\"small\" />\n                </Card>\n              </Col>\n              <Col span={this.state.showFilters ? 6 : 0}>\n                <Card style={{ background: '#e6e6e6' }}>\n                  <Card style={{ marginBottom: 10 }}>\n                    <Radio.Group value={2}>\n                      <Radio style={radioStyle} value={1}>Assigned to me</Radio>\n                      <Radio style={radioStyle} value={2}>Unassigned</Radio>\n                      <Radio style={radioStyle} value={3}>View all</Radio>\n                    </Radio.Group>\n                  </Card>\n                  <Select defaultValue={2} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Period 2017</Select.Option>\n                    <Select.Option value={2}>Period 2018</Select.Option>\n                    <Select.Option value={3}>Period 2019</Select.Option>\n                    <Select.Option value={4}>Period 2020</Select.Option>\n                  </Select>\n                  <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Department</Select.Option>\n                    <Select.Option value={2}>IT</Select.Option>\n                    <Select.Option value={3}>HR</Select.Option>\n                    <Select.Option value={4}>Accounting</Select.Option>\n                  </Select>\n                  <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                    <Select.Option value={1}>Region</Select.Option>\n                    <Select.Option value={2}>Europe</Select.Option>\n                    <Select.Option value={3}>Africa</Select.Option>\n                    <Select.Option value={4}>USA</Select.Option>\n                  </Select>\n                  <DatePicker placeholder=\"Start Date\" format=\"DD/MM/YYYY\" style={{ width: '100%', marginBottom: 10 }} />\n                  <Button type=\"primary\" size=\"large\" block>\n                    Apply Filters\n                    <Icon type=\"sync\" />\n                  </Button>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}