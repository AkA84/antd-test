{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["menu","react_default","a","createElement","Item","key","dataSource","Object","toConsumableArray","Array","map","i","index","name","faker","findName","avatar","image","type","amount","concat","Math","random","toFixed","date","future","status","columns","title","dataIndex","width","render","props","src","sorter","b","toLocaleDateString","dropdown","overlay","es_button","icon","style","transform","href","App","state","radioValue","onRadioChange","e","_this","setState","target","value","radioStyle","display","height","lineHeight","Fragment","breadcrumb","marginBottom","row","gutter","col","span","float","marginRight","Group","es_switch","defaultChecked","size","card","es_select","defaultValue","dropdownMatchSelectWidth","Option","placeholder","showArrow","user","id","table","rowSelection","pagination","scroll","y","background","es_radio","this","onChange","date_picker","format","block","React","Component","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a44b33f5.chunk.js","sourcesContent":["import faker from 'faker';\nimport React from 'react';\nimport {\n  Avatar,\n  Breadcrumb,\n  Button,\n  Card,\n  Col,\n  DatePicker,\n  Dropdown,\n  Icon,\n  Menu,\n  Radio,\n  Row,\n  Select,\n  Switch,\n  Table,\n} from 'antd';\n\nimport './App.css';\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\">1st action</Menu.Item>\n    <Menu.Item key=\"2\">2nd action</Menu.Item>\n    <Menu.Item key=\"3\">3rd action</Menu.Item>\n    <Menu.Item key=\"4\">4th action</Menu.Item>\n  </Menu>\n);\n\nconst dataSource = [...Array(30)].map((i, index) => ({\n  key: index,\n  name: faker.name.findName(),\n  avatar: faker.image.avatar(),\n  type: 'TOIL (in days)',\n  amount: `+${Math.random().toFixed(1)}`,\n  date: faker.date.future(),\n  status: '+info required'\n}));\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: 250,\n    render: (name, props) => (\n      <div><Avatar src={props.avatar} /> {name}</div>\n    ),\n    sorter: (a, b) => {\n      if (a.name < b.name) { return -1; }\n      if (a.name > b.name) { return 1; }\n      return 0;\n    }\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    width: 150,\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    width: 180,\n    render: (date, props) => (\n      <div>{props.amount} {date.toLocaleDateString()}</div>\n    ),\n    sorter: (a, b) => b.date - a.date\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n  },\n  {\n    key: 'actions',\n    render: () => (\n      <Dropdown overlay={menu}>\n        <Button>\n          Actions <Icon type=\"ellipsis\" style={{ transform: 'rotate(90deg)' }} />\n        </Button>\n      </Dropdown>\n\n    )\n  },\n  {\n    key: 'view',\n    render: () => (\n      <a href=\"/\">View <Icon type=\"right\" /></a>\n    )\n  }\n];\n\nexport default class App extends React.Component {\n  state = {\n    radioValue: 2\n  }\n\n  onRadioChange = (e) => {\n    this.setState({\n      radioValue: e.target.value,\n    });\n  }\n\n  render() {\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n\n    return (\n      <>\n      <Breadcrumb style={{ marginBottom: 35 }}>\n         <Breadcrumb.Item>CiviCloud</Breadcrumb.Item>\n        <Breadcrumb.Item>Leave</Breadcrumb.Item>\n        <Breadcrumb.Item>Leave Requests</Breadcrumb.Item>\n      </Breadcrumb>\n      <div>\n        <Row gutter={8} style={{ marginBottom: 29 }}>\n          <Col span={12}>\n            <h1 style={{ marginBottom: 0 }}><Icon type=\"calendar\" />Leave Requests</h1>\n          </Col>\n          <Col span={12} style={{ lineHeight: 3 }}>\n            <div style={{ float: 'right' }}>\n              <span style={{ marginRight: 11}}>Record</span>\n              <Button.Group style={{ marginRight: 11}}>\n                <Button>Absence <Icon type=\"user\" /></Button>\n                <Button>Overtime <Icon type=\"clock-circle\" /></Button>\n              </Button.Group>\n              <Button>Show Filters<Switch defaultChecked size=\"small\" /></Button>\n            </div>\n          </Col>\n        </Row>\n        <Row gutter={8}>\n          <Col span={18}>\n            <Card>\n              <Row style={{ marginBottom: 20 }}>\n                <Col span={12}>\n                  <Select defaultValue={0} dropdownMatchSelectWidth={false} style={{ width: 200 }}>\n                    <Select.Option value={0}>Actions</Select.Option>\n                    <Select.Option value={2}>Bulk Action #1</Select.Option>\n                    <Select.Option value={3}>Bulk Action #2</Select.Option>\n                    <Select.Option value={4}>Bulk Action #3</Select.Option>\n                  </Select>\n                </Col>\n                <Col span={12}>\n                  <div style={{ float: 'right' }}>\n                    <Select\n                      defaultValue=\"contacts\">\n                      <Select.Option value=\"contacts\">Contacts</Select.Option>\n                      <Select.Option value=\"organizations\">Organizations</Select.Option>\n                    </Select>\n                    <Select\n                      style={{ width: 250 }}\n                      placeholder=\"Search / Filter\"\n                      showArrow={false}>\n                      {dataSource.map(user => (\n                        <Select.Option key={user.key} value={user.id}>{user.name}</Select.Option>\n                      ))}\n                    </Select>\n                  </div>\n                </Col>\n              </Row>\n              <Table\n                rowSelection={{}}\n                dataSource={dataSource}\n                columns={columns}\n                pagination={false}\n                scroll={{ y: 800 }}\n                size=\"small\" />\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card style={{ background: '#e6e6e6' }}>\n              <Card style={{ marginBottom: 10 }}>\n                <Radio.Group value={this.state.radioValue} onChange={this.onRadioChange}>\n                  <Radio style={radioStyle} value={1}>Assigned to me</Radio>\n                  <Radio style={radioStyle} value={2}>Unassigned</Radio>\n                  <Radio style={radioStyle} value={3}>View all</Radio>\n                </Radio.Group>\n              </Card>\n              <Select defaultValue={2} style={{ width: '100%', marginBottom: 10 }}>\n                <Select.Option value={1}>Period 2017</Select.Option>\n                <Select.Option value={2}>Period 2018</Select.Option>\n                <Select.Option value={3}>Period 2019</Select.Option>\n                <Select.Option value={4}>Period 2020</Select.Option>\n              </Select>\n              <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                <Select.Option value={1}>Department</Select.Option>\n                <Select.Option value={2}>IT</Select.Option>\n                <Select.Option value={3}>HR</Select.Option>\n                <Select.Option value={4}>Accounting</Select.Option>\n              </Select>\n              <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n                <Select.Option value={1}>Region</Select.Option>\n                <Select.Option value={2}>Europe</Select.Option>\n                <Select.Option value={3}>Africa</Select.Option>\n                <Select.Option value={4}>USA</Select.Option>\n              </Select>\n              <DatePicker placeholder=\"Start Date\" format=\"DD/MM/YYYY\" style={{ width: '100%', marginBottom: 10 }} />\n              <Button type=\"primary\" size=\"large\" block>\n                Apply Filters\n                <Icon type=\"sync\" />\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}