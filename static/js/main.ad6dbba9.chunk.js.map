{"version":3,"sources":["components/main-menu.js","components/main-table.js","components/top-form.js","components/filters-aside.js","App.js","serviceWorker.js","index.js"],"names":["SubMenu","menu","MenuDivider","Divider","MainMenu","state","current","open","handleClick","e","console","log","_this","setState","key","react_default","a","createElement","onClick","this","selectedKeys","defaultOpenKeys","mode","theme","Item","icon","type","title","Component","columns","dataIndex","render","name","props","avatar","src","style","marginRight","className","sorter","b","date","amount","toLocaleDateString","dropdown","overlay","es_button","transform","href","rowSelection","columnWidth","MainTable","react_media","query","matches","table","marginLeft","dataSource","data","filter","column","indexOf","pagination","scroll","y","size","React","TopForm","es_form","layout","Group","label","es_switch","checked","showFilters","onChange","cb","top_form","create","FiltersAside","radioStyle","display","height","lineHeight","Fragment","card","marginBottom","es_radio","value","es_select","defaultValue","width","Option","date_picker","placeholder","format","block","Object","toConsumableArray","Array","map","i","index","faker","findName","image","concat","Math","random","toFixed","future","status","App","collapsed","showMobileMenu","onCollapse","prevState","toggleFiltersVisibility","toggleMobileMenuVisibility","_this2","Sider","breakpoint","trigger","collapsedWidth","textAlign","main_menu_MainMenu","Content","padding","fontSize","bind","breadcrumb","row","gutter","col","span","float","bodyStyle","paddingBottom","dropdownMatchSelectWidth","showArrow","user","id","main_table_MainTable","background","filters_aside_FiltersAside","drawer","placement","closable","visible","onClose","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad6dbba9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'antd';\n\nconst SubMenu = Menu.SubMenu;\nconst MenuDivider = Menu.Divider;\n\nexport default class MainMenu extends Component {\n  state = {\n    current: 'requests-1',\n    open: 'requests'\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        defaultOpenKeys={[this.state.open]}\n        mode=\"inline\"\n        theme=\"light\"\n      >\n        <Menu.Item key=\"dashboard\">\n          <Icon type=\"dashboard\" />\n          <span>Dashboard</span>\n        </Menu.Item>\n        <SubMenu key=\"requests\" title={<span><Icon type=\"inbox\" /><span>Requests</span></span>}>\n          <Menu.Item key=\"requests-1\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #1</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-2\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #2</span>\n          </Menu.Item>\n          <Menu.Item key=\"requests-3\">\n            <Icon type=\"question-circle\" />\n            <span>Menu #3</span>\n          </Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"calendar\">\n          <Icon type=\"calendar\" />\n          <span>Calendar</span>\n        </Menu.Item>\n        <Menu.Item key=\"balance\">\n          <Icon type=\"fund\" />\n          <span>Balance</span>\n        </Menu.Item>\n        <Menu.Item key=\"settings\">\n          <Icon type=\"setting\" />\n          <span>Settings</span>\n        </Menu.Item>\n        <Menu.Item key=\"reports\">\n          <Icon type=\"bar-chart\" />\n          <span>Reports</span>\n        </Menu.Item>\n        <MenuDivider />\n        <Menu.Item key=\"support\">\n          <Icon type=\"setting\" />\n          <span>Support</span>\n        </Menu.Item>\n        <Menu.Item key=\"setup-guide\">\n          <Icon type=\"rocket\" />\n          <span>Setup Guide</span>\n        </Menu.Item>\n        <Menu.Item key=\"preferences\">\n          <Icon type=\"sliders\" />\n          <span>Preferences</span>\n        </Menu.Item>\n        <Menu.Item key=\"field-options\">\n          <Icon type=\"edit\" />\n          <span>Field Options</span>\n        </Menu.Item>\n        <Menu.Item key=\"rss\">\n          <Icon type=\"database\" />\n          <span>RSS Feeds</span>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n","import React from 'react'\nimport Media from 'react-media';\nimport { Avatar, Dropdown, Button, Icon, Menu, Table } from 'antd'\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: (name, props) => (\n      <div><Avatar src={props.avatar} style={{ marginRight: 17 }}/> <span className=\"truncate-name\">{name}</span></div>\n    ),\n    sorter: (a, b) => {\n      if (a.name < b.name) { return -1; }\n      if (a.name > b.name) { return 1; }\n      return 0;\n    }\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    render: (date, props) => (\n      <div>{props.amount} {date.toLocaleDateString()}</div>\n    ),\n    sorter: (a, b) => b.date - a.date\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n  },\n  {\n    key: 'actions',\n    render: () => (\n      <Dropdown overlay={menu}>\n        <Button>\n          Actions <Icon type=\"ellipsis\" style={{ transform: 'rotate(90deg)' }} />\n        </Button>\n      </Dropdown>\n    )\n  },\n  {\n    key: 'view',\n    render: () => (\n      <a href=\"/\">View <Icon type=\"right\" /></a>\n    )\n  }\n];\n\nconst menu = (\n  <Menu>\n    <Menu.Item key=\"1\">1st action</Menu.Item>\n    <Menu.Item key=\"2\">2nd action</Menu.Item>\n    <Menu.Item key=\"3\">3rd action</Menu.Item>\n    <Menu.Item key=\"4\">4th action</Menu.Item>\n  </Menu>\n);\n\nconst rowSelection = {\n  columnWidth: 10\n}\n\nexport default class MainTable extends React.Component {\n  render () {\n    return (\n      <Media query=\"(max-width: 1023px)\">\n        {matches => (\n          <Table\n            style={{ marginLeft: -24, marginRight: -24 }}\n            rowSelection={rowSelection}\n            dataSource={this.props.data}\n            columns={!matches ? columns: columns.filter(column => ~['name', 'type', 'actions', 'view'].indexOf(column.key))}\n            pagination={false}\n            scroll={{ y: 800 }}\n            size=\"small\" />\n        )}\n      </Media>\n    )\n  }\n}\n","import React from 'react'\nimport Media from 'react-media';\nimport { Button, Form, Icon, Switch } from 'antd'\n\nclass TopForm extends React.Component {\n  render () {\n    return (\n      <Media query=\"(max-width: 1023px)\">\n        {matches => (\n          <Form layout=\"inline\">\n            {!matches &&\n              <Form.Item>\n                <span>Record</span>\n              </Form.Item>\n            }\n            {!matches &&\n              <Form.Item>\n                <Button.Group>\n                  <Button>Absence <Icon type=\"user\" /></Button>\n                  <Button>Overtime <Icon type=\"clock-circle\" /></Button>\n                </Button.Group>\n              </Form.Item>\n            }\n            <Form.Item label=\"Show Filters\">\n              <Switch checked={this.props.showFilters} onChange={this.props.cb} size=\"small\" />\n            </Form.Item>\n          </Form>\n        )}\n      </Media>\n    )\n  }\n}\n\nexport default Form.create()(TopForm);\n","import React from 'react'\nimport {\n  Button,\n  Card,\n  DatePicker,\n  Icon,\n  Radio,\n  Select,\n} from 'antd'\n\nexport default class FiltersAside extends React.Component {\n  render () {\n    const radioStyle = {\n      display: 'block',\n      height: '30px',\n      lineHeight: '30px',\n    };\n\n    return (\n      <>\n        <Card style={{ marginBottom: 10 }}>\n          <Radio.Group value={2}>\n            <Radio style={radioStyle} value={1}>Assigned to me</Radio>\n            <Radio style={radioStyle} value={2}>Unassigned</Radio>\n            <Radio style={radioStyle} value={3}>View all</Radio>\n          </Radio.Group>\n        </Card>\n        <Select defaultValue={2} style={{ width: '100%', marginBottom: 10 }}>\n          <Select.Option value={1}>Period 2017</Select.Option>\n          <Select.Option value={2}>Period 2018</Select.Option>\n          <Select.Option value={3}>Period 2019</Select.Option>\n          <Select.Option value={4}>Period 2020</Select.Option>\n        </Select>\n        <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n          <Select.Option value={1}>Department</Select.Option>\n          <Select.Option value={2}>IT</Select.Option>\n          <Select.Option value={3}>HR</Select.Option>\n          <Select.Option value={4}>Accounting</Select.Option>\n        </Select>\n        <Select defaultValue={1} style={{ width: '100%', marginBottom: 10 }}>\n          <Select.Option value={1}>Region</Select.Option>\n          <Select.Option value={2}>Europe</Select.Option>\n          <Select.Option value={3}>Africa</Select.Option>\n          <Select.Option value={4}>USA</Select.Option>\n        </Select>\n        <DatePicker placeholder=\"Start Date\" format=\"DD/MM/YYYY\" style={{ width: '100%', marginBottom: 10 }} />\n        <Button type=\"primary\" size=\"large\" block>\n          Apply Filters\n          <Icon type=\"sync\" />\n        </Button>\n      </>\n    );\n  }\n}\n","import faker from 'faker';\nimport React from 'react';\nimport Media from 'react-media';\nimport {\n  Breadcrumb,\n  Card,\n  Col,\n  Drawer,\n  Icon,\n  Layout,\n  Row,\n  Select,\n} from 'antd';\n\nimport MainMenu from './components/main-menu';\nimport MainTable from './components/main-table';\nimport TopForm from './components/top-form';\nimport FiltersAside from './components/filters-aside';\n\nimport './App.css';\n\nconst dataSource = [...Array(30)].map((i, index) => ({\n  key: index,\n  name: faker.name.findName(),\n  avatar: faker.image.avatar(),\n  type: 'TOIL (in days)',\n  amount: `+${Math.random().toFixed(1)}`,\n  date: faker.date.future(),\n  status: '+info req.'\n}));\n\nexport default class App extends React.Component {\n  state = {\n    collapsed: false,\n    showFilters: true,\n    showMobileMenu: false\n  }\n\n  onCollapse = () => {\n    this.setState(prevState => ({\n      collapsed: !prevState.collapsed\n    }))\n  }\n\n  toggleFiltersVisibility = value => {\n    this.setState(prevState => ({\n      showFilters: value\n    }))\n  }\n\n  toggleMobileMenuVisibility = value => {\n    this.setState(prevState => ({\n      showMobileMenu: value\n    }))\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Media query=\"(max-width: 1023px)\">\n          {matches => (\n            <Layout.Sider\n              breakpoint=\"md\"\n              trigger={null}\n              collapsedWidth=\"0\"\n              width={matches ? 216 : 240}\n              theme=\"light\">\n              <div style={{ textAlign: 'center' }}>\n                <h1>\n                  <Icon type=\"calendar\" /><br />Leave\n                </h1>\n              </div>\n              <MainMenu />\n            </Layout.Sider>\n          )}\n        </Media>\n        <Media query=\"(max-width: 1279px)\">\n          {matches => (\n            <Layout.Content style={{ padding: matches ? '25px 16px' : '25px 36px' }}>\n              <Media\n                query=\"(max-width: 768px)\"\n                render={ () => (\n                  <Icon\n                    type={ this.state.showMobileMenu ? 'menu-fold' : 'menu-unfold' }\n                    style={{ fontSize: 32, marginBottom: 32 }}\n                    onClick={this.toggleMobileMenuVisibility.bind(this, true)} />\n                  )}\n              />\n              <Breadcrumb style={{ marginBottom: 35 }}>\n                <Breadcrumb.Item>CiviCloud</Breadcrumb.Item>\n                <Breadcrumb.Item>Leave</Breadcrumb.Item>\n                <Breadcrumb.Item>Leave Requests</Breadcrumb.Item>\n              </Breadcrumb>\n              <div>\n                <Row gutter={8} style={{ marginBottom: 29 }}>\n                  <Col span={8}>\n                    <h2 style={{ marginBottom: 0 }}><Icon type=\"calendar\" />Leave Requests</h2>\n                  </Col>\n                  <Col span={16}>\n                    <div style={{ float: 'right' }}>\n                      <TopForm showFilters={this.state.showFilters} cb={this.toggleFiltersVisibility.bind(this)} />\n                    </div>\n                  </Col>\n                </Row>\n                <Row gutter={8}>\n                  <Col span={this.state.showFilters && !matches ? 18 : 24}>\n                    <Card bodyStyle={{ paddingBottom: 0 }}>\n                      <Row style={{ marginBottom: 20 }}>\n                        <Col span={12}>\n                          <Select defaultValue={0} dropdownMatchSelectWidth={false} style={{ width: 200 }}>\n                            <Select.Option value={0}>Actions</Select.Option>\n                            <Select.Option value={2}>Bulk Action #1</Select.Option>\n                            <Select.Option value={3}>Bulk Action #2</Select.Option>\n                            <Select.Option value={4}>Bulk Action #3</Select.Option>\n                          </Select>\n                        </Col>\n                        <Col span={12}>\n                          <div style={{ float: 'right' }}>\n                            <Select\n                              defaultValue=\"contacts\">\n                              <Select.Option value=\"contacts\">Contacts</Select.Option>\n                              <Select.Option value=\"organizations\">Organizations</Select.Option>\n                            </Select>\n                            <Select\n                              style={{ width: 230 }}\n                              placeholder=\"Search / Filter\"\n                              showArrow={false}>\n                              {dataSource.map(user => (\n                                <Select.Option key={user.key} value={user.id}>{user.name}</Select.Option>\n                              ))}\n                            </Select>\n                          </div>\n                        </Col>\n                      </Row>\n                      <MainTable data={dataSource} />\n                    </Card>\n                  </Col>\n                  <Col span={this.state.showFilters && !matches ? 6 : 0}>\n                    <Card style={{ background: '#e6e6e6' }}>\n                      <FiltersAside />\n                    </Card>\n                  </Col>\n                </Row>\n              </div>\n              { matches &&\n                <Drawer\n                title=\"Filters\"\n                placement=\"right\"\n                closable={true}\n                visible={this.state.showFilters}\n                onClose={this.toggleFiltersVisibility.bind(this, false)}\n                width=\"300\">\n                  <FiltersAside />\n                </Drawer>\n              }\n            </Layout.Content>\n          )}\n        </Media>\n        <Media query=\"(max-width: 768px)\">\n          <Drawer\n          title={null}\n          placement=\"left\"\n          closable={false}\n          visible={this.state.showMobileMenu}\n          onClose={this.toggleMobileMenuVisibility.bind(this, false)}\n          style={{ padding: 0 }}\n          width=\"216\">\n            <Layout.Sider\n              theme=\"light\"\n              width=\"216\">\n              <MainMenu />\n            </Layout.Sider>\n          </Drawer>\n        </Media>\n      </Layout>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}